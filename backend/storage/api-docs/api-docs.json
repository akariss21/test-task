{
    "openapi": "3.0.0",
    "info": {
        "title": "Online Store API",
        "description": "API documentation for the online grocery store",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/registration": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "c31973687f6efb4c39e8385f17b0bab7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get current authenticated user's profile",
                "operationId": "d32e56b6274eb68e980da6d91fbe9fd8",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/balance": {
            "get": {
                "tags": [
                    "Balance"
                ],
                "summary": "Get current user's balance",
                "operationId": "b29c26e9b85422b4b7431d8e440baa65",
                "responses": {
                    "200": {
                        "description": "User balance returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "List of categories returned successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "summary": "Get all orders",
                "operationId": "325fd3d55bbe9bb39645269928fa4983",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new order",
                "operationId": "445bab4f7dc9ea6fcd54f286c0209478",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders/{id}/complete": {
            "patch": {
                "summary": "Mark order as completed",
                "operationId": "41eb58e74f78ed91fa5fe992d5c35d58",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order marked as completed"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders/{order}": {
            "get": {
                "summary": "Get order by ID",
                "operationId": "3d8b2f9540148b79b0ff3f37e890d32f",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "summary": "Get list of all products",
                "operationId": "c1ff6f862214e1896c59cfe0491ce0e8",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new product (seller only)",
                "operationId": "399770d33fa4672f1216707d0e236763",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not a seller"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{product}": {
            "get": {
                "summary": "Get product by ID",
                "operationId": "3c3728f01a2a0db7efe664dea46e8424",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a product",
                "operationId": "13d9c94a21e9746d2a61b6a3247b7693",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update product information",
                "operationId": "8138abd5af04eadc1998c013d0a2f099",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/transactions/deposit": {
            "post": {
                "summary": "Deposit balance",
                "operationId": "ceb7a329fc57f445965506fe5bd2c822",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Balance deposited"
                    },
                    "400": {
                        "description": "Error during deposit"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/transactions/withdraw": {
            "post": {
                "summary": "Withdraw funds",
                "operationId": "2a0634122e13adafa8e15a3f10e286b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Withdrawal completed"
                    },
                    "400": {
                        "description": "Insufficient funds"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/transactions/purchase": {
            "post": {
                "summary": "Purchase an order",
                "operationId": "6806ea4a8e1de561ac59ce952cfe2c9e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionPurchaseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchase completed successfully"
                    },
                    "400": {
                        "description": "Insufficient funds or order already completed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/become-seller": {
            "post": {
                "summary": "Become a seller",
                "description": "Changes the current user's role to 'seller'. If the user is already a seller, returns a message indicating this.",
                "operationId": "8b23525a7d44740aa61b94bc2fc2a22c",
                "responses": {
                    "200": {
                        "description": "Response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are now a seller or already a seller"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/role": {
            "get": {
                "summary": "Get current user's role",
                "description": "Returns the user's role (buyer or seller)",
                "operationId": "5ec1c57c1732a9dbb47d000f2fbabea5",
                "responses": {
                    "200": {
                        "description": "User role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BalanceRequest": {
                "description": "Empty request to get balance",
                "type": "object"
            },
            "BecomeSellerRequest": {
                "description": "Request to switch to seller role. Request body is empty.",
                "type": "object"
            },
            "CategoryRequest": {
                "title": "CategoryRequest",
                "description": "Data for creating a new category",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Vegetables"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "LoginRequest",
                "description": "User login data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "OrderRequest": {
                "title": "OrderRequest",
                "description": "Request to create an order",
                "required": [
                    "customer_name",
                    "order_date",
                    "products"
                ],
                "properties": {
                    "customer_name": {
                        "type": "string",
                        "example": "Ivan Ivanov"
                    },
                    "order_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-30"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "new",
                            "completed"
                        ],
                        "example": "new"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Please deliver by evening"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "quantity"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": 2
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ProductRequest": {
                "title": "ProductRequest",
                "description": "Request to create a new product",
                "required": [
                    "name",
                    "price",
                    "category_id",
                    "quantity"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Apple"
                    },
                    "description": {
                        "type": "string",
                        "example": "Fresh green apple",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0.01,
                        "example": 19.99
                    },
                    "category_id": {
                        "description": "ID of an existing category",
                        "type": "integer",
                        "example": 3
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 100
                    }
                },
                "type": "object"
            },
            "ProductUpdateRequest": {
                "title": "ProductUpdateRequest",
                "description": "Request to update a product",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Green apple",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Fresh green apples",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0.01,
                        "example": 18.5,
                        "nullable": true
                    },
                    "category_id": {
                        "description": "ID of an existing category",
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 50
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "RegisterRequest",
                "description": "User registration request",
                "required": [
                    "name",
                    "email",
                    "password",
                    "gender"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Ivan Ivanov"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "ivan@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "strongpassword123"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    }
                },
                "type": "object"
            },
            "TransactionDepositRequest": {
                "required": [
                    "amount"
                ],
                "properties": {
                    "amount": {
                        "description": "Amount to deposit to the balance",
                        "type": "number",
                        "format": "float",
                        "minimum": 0.01,
                        "example": 100.5
                    }
                },
                "type": "object"
            },
            "TransactionPurchaseRequest": {
                "required": [
                    "order_id"
                ],
                "properties": {
                    "order_id": {
                        "description": "ID of the order to purchase",
                        "type": "integer",
                        "example": 123
                    }
                },
                "type": "object"
            },
            "TransactionWithdrawRequest": {
                "required": [
                    "amount"
                ],
                "properties": {
                    "amount": {
                        "description": "Amount to withdraw from the account",
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    }
                },
                "type": "object"
            },
            "BalanceResource": {
                "properties": {
                    "balance": {
                        "description": "Current user balance",
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Fruits"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-30T14:22:05Z"
                    }
                },
                "type": "object"
            },
            "OrderResource": {
                "title": "OrderResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 123
                    },
                    "customer_name": {
                        "type": "string",
                        "example": "Ivan Ivanov"
                    },
                    "order_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-30"
                    },
                    "status": {
                        "type": "string",
                        "example": "new"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Please call before delivery",
                        "nullable": true
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Apples"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 100.5
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "subtotal": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 301.5
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-30T14:22:05Z"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "title": "ProductResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 10
                    },
                    "name": {
                        "type": "string",
                        "example": "Apples"
                    },
                    "description": {
                        "type": "string",
                        "example": "Fresh apples",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 50
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "Fruits"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-30T14:22:05Z"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "RoleResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ivan Ivanov"
                    },
                    "role": {
                        "type": "string",
                        "example": "seller"
                    },
                    "is_seller": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "TransactionResource": {
                "title": "TransactionResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 123
                    },
                    "type": {
                        "type": "string",
                        "example": "deposit"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 456,
                        "nullable": true
                    },
                    "seller_id": {
                        "type": "integer",
                        "example": 789,
                        "nullable": true
                    },
                    "meta": {
                        "description": "Additional transaction data",
                        "type": "object",
                        "example": {
                            "product_id": 12,
                            "quantity": 2,
                            "price": 50.25
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-30T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Иван Иванов"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "ivan@example.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "example": 150.75
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-30T12:34:56Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in format Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Balance",
            "description": "Balance"
        },
        {
            "name": "Categories",
            "description": "Categories"
        }
    ]
}